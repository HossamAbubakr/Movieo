name: Movieo CI Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  detect-changes:
    name: Detect changed project(s)
    runs-on: ubuntu-latest
    outputs:
      server_changed: ${{ steps.set-output.outputs.server_changed }}
      client_changed: ${{ steps.set-output.outputs.client_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: get-changes
        run: |
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          git diff --name-only origin/${{ github.base_ref || 'main' }} >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Set change flags
        id: set-output
        run: |
          SERVER_CHANGED=false
          CLIENT_CHANGED=false

          if git diff --name-only origin/${{ github.base_ref || 'main' }} | grep '^server/'; then
            SERVER_CHANGED=true
          fi

          if git diff --name-only origin/${{ github.base_ref || 'main' }} | grep '^client/'; then
            CLIENT_CHANGED=true
          fi

          echo "server_changed=$SERVER_CHANGED" >> $GITHUB_OUTPUT
          echo "client_changed=$CLIENT_CHANGED" >> $GITHUB_OUTPUT

  test:
    name: Selective Build & Test
    needs: detect-changes
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: movieo_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/movieo_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js 20.9
        uses: actions/setup-node@v3
        with:
          node-version: 20.9

      - name: Install server dependencies
        if: needs.detect-changes.outputs.server_changed == 'true'
        working-directory: ./server
        run: npm ci

      - name: Generate Prisma client
        if: needs.detect-changes.outputs.server_changed == 'true'
        working-directory: ./server
        run: npx prisma generate

      - name: Apply Prisma migrations
        if: needs.detect-changes.outputs.server_changed == 'true'
        working-directory: ./server
        run: npx prisma migrate deploy

      - name: Lint server code
        if: needs.detect-changes.outputs.server_changed == 'true'
        working-directory: ./server
        run: npm run lint

      - name: Type check server code
        if: needs.detect-changes.outputs.server_changed == 'true'
        working-directory: ./server
        run: npm run typecheck

      - name: Run server tests
        if: needs.detect-changes.outputs.server_changed == 'true'
        working-directory: ./server
        run: npm test

      - name: Build server project
        if: needs.detect-changes.outputs.server_changed == 'true'
        working-directory: ./server
        run: npm run build

      - name: Install client dependencies
        if: needs.detect-changes.outputs.client_changed == 'true'
        working-directory: ./client
        run: npm ci

      - name: Lint client code
        if: needs.detect-changes.outputs.client_changed == 'true'
        working-directory: ./client
        run: npm run lint

      - name: Type check client code
        if: needs.detect-changes.outputs.client_changed == 'true'
        working-directory: ./client
        run: npm run typecheck

      - name: Run client tests
        if: needs.detect-changes.outputs.client_changed == 'true'
        working-directory: ./client
        run: npm test

      - name: Build client project
        if: needs.detect-changes.outputs.client_changed == 'true'
        working-directory: ./client
        run: npm run build
